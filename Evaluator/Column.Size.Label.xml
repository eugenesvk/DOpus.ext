<?xml version="1.0"?>
<evalcolumn align="0" attrrefresh="no" autorefresh="yes" category="size" customgrouping="no" foldertype="shell" header="z" keyword="size.L.ε" maxstars="5" namerefresh="no" nocache="no" reversegroups="no" reversesort="yes" supportmarkup="yes" title="Size.Label.ε" type="0" width="1">// Column.Size.Label  v0.1@25-09
if (!IsSet(size))	{return;}
if (operation == &quot;sort&quot;) {return size}

binary_multiplier = false; // Display size as Binary (2¹⁰=1024), otherwise Decimal (10³=1000)
k:double = (binary_multiplier == true) ? 1024 : 1000;

o = &quot;&quot;; is_bold = false; //is_gray = false;
if      	(size == 0 )     	{o = &quot;&quot; ;
} elseif	(size &lt;     k )  	{o = &quot;&quot; ;
} elseif	(size &lt; Pow(k,2))	{o = &quot;&quot;; //&quot;k&quot;; is_gray = true;
} elseif	(size &lt; Pow(k,3))	{o = &quot;m&quot;;
} elseif	(size &lt; Pow(k,4))	{o = &quot;G&quot;; is_bold = true;
} elseif	(size &lt; Pow(k,5))	{o = &quot;T&quot;; is_bold = true;
} elseif	(size &lt; Pow(k,6))	{o = &quot;P&quot;; is_bold = true;
} elseif	(size &lt; Pow(k,7))	{o = &quot;E&quot;; is_bold = true;
} elseif	(size &lt; Pow(k,8))	{o = &quot;Z&quot;; is_bold = true;
} elseif	                 	{o = &quot;Y&quot;; is_bold = true;
}
//pre += is_gray ? &quot;&lt;#a3a3a3&gt;&quot; : &quot;&quot;;
//pos += is_gray ? &quot;&lt;/#&gt;&quot; : &quot;&quot;;
return operation == &quot;markup&quot; ? (is_bold ? &quot;&lt;b&gt;&quot;+o+&quot;&lt;/b&gt;&quot; : o) : o;
</evalcolumn>
